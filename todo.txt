tenncor:
- during the unfreeze update process, avoid duplicate updates by stopping at branching nodes to wait for dependency updates
- implement convolution operator
- shape and preparation functors should ideally use C++17 variant
    (replace with resulting shape and temporary cache)
- remove move and clone functions for classes that don't need it
- define alloc shape as mutable and allowed shape as immutable (enforce this rule)
	placeholder of (4, 0) should accept input of size of any multiple of 4
- refine shape flexibility e.g: (4,) == (4,1)
	also any shape padded by 0 or 1 maybe “optimized” for lower dimensional shape
	(this should be an option, since some applications may not want to lose this information)
- possible dangling pointers by propagating destruction in the graph

evaluate rocnnet principles:
- practicality
- efficiency
– logical correctness
- testability/program transparency

interesting ideas:
- scalable batch size (increasing batch size over generations)

tests:
- improve tests (test base_immutable and immutable separately)

need testing:
- copying and moving observers on multiple unmanaged constants
- detaching unmanaged constants from observers
- copying immutable of uninitialized variables
- updates should be handled by graph_manager
- reactive updates by default should be restricted to unary connectors, n-ary connectors should update lazily